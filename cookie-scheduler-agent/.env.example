# =============================================================================
# GOOGLE CLOUD CONFIGURATION
# =============================================================================
# Your Google Cloud Project ID where BigQuery dataset will be created
# Example: my-cookie-delivery-project
GOOGLE_CLOUD_PROJECT=your-gcp-project-id

# Model configuration for Google ADK
# Options: gemini-1.5-flash-001, gemini-1.5-pro-001, etc.
MODEL=gemini-1.5-flash-001

# =============================================================================
# BIGQUERY INTEGRATION
# =============================================================================
# Set to 'true' to use real BigQuery, 'false' to use dummy data
USE_BIGQUERY=false

# =============================================================================
# BUSINESS ACCOUNT CONFIGURATION (for MCP servers)
# =============================================================================
# Business email address for sending customer communications
# This should be your business Gmail account
BUSINESS_EMAIL=deliveries@yourbusiness.com

# Google Calendar ID for delivery scheduling
# Use 'primary' for the main calendar or a specific calendar ID
# To find calendar ID: Go to Google Calendar > Settings > Calendar settings > Calendar ID
BUSINESS_CALENDAR_ID=primary

# =============================================================================
# MCP SERVER CONFIGURATION (Optional - for remote servers)
# =============================================================================
# If running MCP servers remotely, specify their endpoints
# Leave as 'stdio' if running locally via standard input/output
CALENDAR_MCP_URL=stdio
GMAIL_MCP_URL=stdio

# =============================================================================
# DEVELOPMENT/TESTING (Optional)
# =============================================================================
# Set to 'development' to use dummy data instead of real services
# Set to 'production' to use real BigQuery, Calendar, and Gmail
ENVIRONMENT=production

# Logging level - controls how much detail is logged
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env (without .example)
# 2. Replace all placeholder values with your actual configuration
# 3. Set up Google Cloud authentication:
#    gcloud auth application-default login
#    gcloud config set project YOUR_PROJECT_ID
# 4. Run the BigQuery setup script:
#    ./setup.sh
# 5. Enable BigQuery integration:
#    Set USE_BIGQUERY=true in your .env file
# 6. Test the integration:
#    python test_bigquery.py
# 7. Create OAuth2 credentials for MCP servers (optional):
#    - Enable Calendar API and Gmail API in Google Cloud Console
#    - Create OAuth 2.0 Client ID (Desktop Application)
#    - Download JSON and save as calendar_credentials.json and gmail_credentials.json
# 8. Run the agent system:
#    python agent.py
#
# SECURITY WARNING:
# - Never commit .env files to version control
# - Never share credential files publicly
# - Use environment-specific configurations for different deployments
